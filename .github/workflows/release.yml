name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Get version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Build binaries
      run: |
        # Create release directory
        mkdir -p release
        
        # Build flags
        VERSION=${{ steps.version.outputs.VERSION }}
        COMMIT_HASH=$(git rev-parse --short HEAD)
        BUILD_TIME=$(date -u '+%Y-%m-%d_%H:%M:%S')
        LDFLAGS="-X main.version=${VERSION} -X main.commit=${COMMIT_HASH} -X main.buildTime=${BUILD_TIME} -s -w"
        
        # Build for different platforms
        platforms=(
          "linux/amd64"
          "linux/arm64"
          "darwin/amd64"
          "darwin/arm64"
          "windows/amd64"
          "windows/arm64"
        )
        
        for platform in "${platforms[@]}"; do
          IFS='/' read -r GOOS GOARCH <<< "$platform"
          
          case $GOOS in
            "linux")
              OS_NAME="Linux"
              ;;
            "darwin")
              OS_NAME="Darwin"
              ;;
            "windows")
              OS_NAME="Windows"
              ;;
          esac
          
          case $GOARCH in
            "amd64")
              ARCH_NAME="x86_64"
              ;;
            "arm64")
              ARCH_NAME="arm64"
              ;;
          esac
          
          output_name="claudeproxy_${OS_NAME}_${ARCH_NAME}"
          if [ $GOOS = "windows" ]; then
            output_name+='.exe'
          fi
          
          echo "Building for $GOOS/$GOARCH -> $output_name"
          
          env GOOS=$GOOS GOARCH=$GOARCH CGO_ENABLED=0 go build \
            -ldflags="${LDFLAGS}" \
            -o release/${output_name} \
            main.go
        done
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: Claude Code Proxy ${{ steps.version.outputs.VERSION }}
        body: |
          # Claude Code Proxy ${{ steps.version.outputs.VERSION }}

          ## 🔧 配置说明
          
          详细配置说明请参考项目文档。
          
          ---
          
          **完整源代码**: https://github.com/${{ github.repository }}
          **问题反馈**: https://github.com/${{ github.repository }}/issues
          **使用文档**: https://github.com/${{ github.repository }}/blob/main/README.md
        files: |
          release/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
